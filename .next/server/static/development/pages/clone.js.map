{"version":3,"file":"static/development/pages/clone.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/clone.js","webpack:///./redux/actionTypes.js","webpack:///./redux/actions.js","webpack:///./shared/constants.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/link\"","webpack:///external \"react\"","webpack:///external \"react-redux\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { Component } from 'react'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\nimport constants from '../shared/constants'\nimport {\n  assignProjects,\n  assignProcesses,\n  assignErrors,\n  assignSTDERR,\n  assignSTDOUT\n} from '../redux/actions'\nimport { connect } from 'react-redux'\n\nclass ChatTwo extends Component {\n  // fetch old messages data from the server\n  static async getInitialProps ({ req }) {\n    const response = await fetch('http://localhost:3000/messages/chat2')\n    const messages = await response.json()\n    return { messages }\n  }\n\n  static defaultProps = {\n    messages: []\n  }\n\n  // init state with the prefetched messages\n  state = {\n    field: '',\n    newMessage: 0,\n    messages: this.props.messages,\n    subscribe: false,\n    subscribed: false\n  }\n\n  subscribe = () => {\n    if (this.state.subscribe && !this.state.subscribed) {\n      // connect to WS server and listen event\n      const { dispatch } = this.props\n\n      console.log('should subscribe')\n      this.props.socket.on(constants.PROJECTS_LIST, (data) => dispatch(assignProjects(data)))\n      this.props.socket.on(constants.GENERAL_ERROR, (data) => dispatch(assignErrors(data)))\n      this.props.socket.on(constants.STDOUT, (data) => dispatch(assignSTDOUT(data)))\n      this.props.socket.on(constants.STDERR, (data) => dispatch(assignSTDERR(data)))\n      this.props.socket.on(constants.PROCESS_FINISHED, (data) => dispatch(assignSTDOUT(data)))\n      this.props.socket.on(constants.START_PROCESS, (data) => dispatch(assignSTDOUT(data)))\n      this.props.socket.on(constants.PROCESSES_LIST, (data) => dispatch(assignProcesses(data)))\n\n      // this.props.socket.on('message.chat2', this.handleMessage)\n      // this.props.socket.on('message.chat1', this.handleOtherMessage)\n      this.setState({ subscribed: true })\n    }\n  }\n  componentDidMount () {\n    this.subscribe()\n  }\n\n  componentDidUpdate () {\n    this.subscribe()\n  }\n\n  static getDerivedStateFromProps (props, state) {\n    if (props.socket && !state.subscribe) return { subscribe: true }\n    return null\n  }\n\n  // close socket connection\n  componentWillUnmount () {\n    this.props.socket.off('message.chat1', this.handleOtherMessage)\n    this.props.socket.off('message.chat2', this.handleMessage)\n  }\n\n  // add messages from server to the state\n  consoleOut = d => {\n    console.log(d)\n  }\n\n  handleMessage = message => {\n    this.setState(state => ({ messages: state.messages.concat(message) }))\n  }\n\n  handleOtherMessage = () => {\n    this.setState(prevState => ({ newMessage: prevState.newMessage + 1 }))\n  }\n\n  handleChange = event => {\n    this.setState({ field: event.target.value })\n  }\n\n  // send messages to server and add them to the state\n  sendDefined = event => {\n    event.preventDefault()\n\n    // create message object\n    const message = {\n      type: 'defined',\n      task_id: 'easy mode',\n      project_id: 'example',\n      // command: \"ruby\",\n      // env_params: {},\n      // cwd: \"/home/jakub/parrot-next\",\n      args: [\"hello.rb\"]\n    }\n\n    // send object to WS server\n    this.props.socket.emit(constants.START_PROCESS, message)\n\n    // add it to state and clean current input value\n    this.setState(state => ({\n      field: '',\n      messages: state.messages.concat(message)\n    }))\n  }\n\n  sendQuick = event => {\n    event.preventDefault()\n\n    // create message object\n    const message = {\n      type: 'quick',\n      task_id: 'easy and quick',\n      project_id: 'example',\n    }\n\n    // send object to WS server\n    this.props.socket.emit(constants.START_PROCESS, message)\n\n    // add it to state and clean current input value\n    this.setState(state => ({\n      field: '',\n      messages: state.messages.concat(message)\n    }))\n  }\n\n  sendQueue = event => {\n    event.preventDefault()\n\n    // create message object\n    const message = {\n      type: 'queue',\n      task_id: 'easy queue',\n      project_id: 'example',\n    }\n\n    // send object to WS server\n    this.props.socket.emit(constants.START_PROCESS, message)\n\n    // add it to state and clean current input value\n    this.setState(state => ({\n      field: '',\n      messages: state.messages.concat(message)\n    }))\n  }\n\n  render () {\n    return (\n      <main>\n        <div>\n          <Link href={'/'}>\n            <a>{`Chat One ${\n              this.state.newMessage > 0\n                ? `( ${this.state.newMessage} new message )`\n                : ''\n            }`}</a>\n          </Link>\n          <br />\n          <Link href={'/clone'}>\n            <a>{'Chat Two'}</a>\n          </Link>\n          <ul>\n            {this.state.messages.map(message => (\n              <li key={message.id}>{message.value}</li>\n            ))}\n          </ul>\n          <form onSubmit={e => this.sendDefined(e)}>\n            <input\n              onChange={this.handleChange}\n              type='text'\n              placeholder='Hello world!'\n              value={this.state.field}\n            />\n            <button>Send</button>\n          </form>\n          <br/>\n          <button onClick={this.sendDefined}>defined</button>\n          <button onClick={this.sendQuick}>quick</button>\n          <button onClick={this.sendQueue}>queue</button>\n        </div>\n      </main>\n    )\n  }\n}\n\nexport default connect()(ChatTwo)\n","export const actionTypes = {\n  ASSIGN_PROCESSES: 'ASSIGN_PROCESSES',\n  ASSIGN_PROJECTS: 'ASSIGN_PROJECTS',\n  ASSIGN_STDOUT: 'ASSIGN_STDOUT',\n  ASSIGN_STDERR: 'ASSIGN_STDERR',\n  ASSIGN_ERRORS: 'ASSIGN_ERRORS'\n}\n","import { actionTypes } from './actionTypes'\n\n// ACTIONS\nexport const assignProjects = (projects) => {\n  return ({ type: actionTypes.ASSIGN_PROJECTS, payload: projects })\n}\n\nexport const assignProcesses = (processes) => {\n  return ({ type: actionTypes.ASSIGN_PROCESSES, payload: processes })\n}\n\nexport const assignSTDOUT = (stdout) => {\n  return ({ type: actionTypes.ASSIGN_STDOUT, payload: stdout })\n}\n\nexport const assignSTDERR = (stderr) => {\n  return ({ type: actionTypes.ASSIGN_STDERR, payload: stderr })\n}\n\nexport const assignErrors = (errors) => {\n  return ({ type: actionTypes.ASSIGN_ERRORS, payload: errors })\n}\n","module.exports = {\n  PROCESSES_CHANNEL: 'PROCESSES_CHANNEL',\n  GENERAL_CHANNEL: 'GENERAL_CHANNEL',\n  GENERAL_ERROR: 'GENERAL_ERROR',\n  GET_PROJECTS: 'GET_PROJECTS',\n  PROJECTS_LIST: 'PROJECTS_LIST',\n  START_PROCESS: 'START_PROCESS',\n  PROCESSES_LIST: 'PROCESSES_LIST',\n  PROCESS_STARTED: 'PROCESS_STARTED',\n  PROCESS_FINISHED: 'PROCESS_FINISHED',\n  STDOUT: 'STDOUT',\n  STDERR: 'STDERR'\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/link\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");"],"mappingsxFA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;;;;;;AApGA;AACA;AACA;;;AAEA;AACA;AACA;;;AAOA;AACA;AACA;AACA;AACA;AACA;;;AAmFA;AAAA;AACA;AAAA;AAGA;AAAA;AAQA;AAAA;AAIA;AACA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;;;AAhLA;;;;;;;;;;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AA0CA;AACA;AAAA;AAAA;AACA;AACA;;;;AAnDA;AACA;AADA;AASA;AACA;AAFA;AACA;AA2KA;;;;;;;;;;;;ACjMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}